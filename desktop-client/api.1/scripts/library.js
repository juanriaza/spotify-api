require(["$api/models"],function(b){function d(c){b.Track._cache.update(c.uris,{starred:"insert"==c.type})}function a(c){b.BridgeLoadable.call(this);var a=b.User.fromURI(c);this.resolve("owner",a);this.resolve("albums",new b.BridgeCollection(b.Album,null,"library_albums",a.uri));this.resolve("artists",new b.BridgeCollection(b.Artist,null,"library_artists",a.uri));this.resolve("playlists",new b.BridgeCollection(b.Playlist,null,"library_playlists",a.uri));this.resolve("published",new b.BridgeCollection(b.Playlist,
null,"library_published",a.uri));this.resolve("starred",b.Playlist.fromURI(a.uri+":starred"));this.resolve("toplist",b.Playlist.fromURI(a.uri+":toplist"));this.resolve("tracks",new b.BridgeCollection(b.Track,this.uri,"library_tracks",a.uri));if(a.uri==b.session.user.uri)b.Playlist.getOrCreateLibraryListener().proxyTo(this),this.starred.addEventListener("insert",d),this.starred.addEventListener("remove",d);else{var e=this,c=function(){e.bridgeListen("library_event_wait",[a.uri])};this.albums._observed=
c;this.artists._observed=c;this.playlists._observed=c;this.published._observed=c;this.tracks._observed=c}}SP.inherit(a,b.BridgeLoadable);a.fromURI=b.Cache.lookup;a._cache=new b.Cache(a);b.Loadable.define(a,"albums artists owner playlists published starred toplist tracks".split(" "));a.Item;a.prototype.publish=function(a){return b.promisedRequest(this,"library_publish",[this.owner.uri].concat(SP.uris(arguments)))};a.prototype.star=function(a){return b.promisedRequest(this,"library_star",[this.owner.uri].concat(SP.uris(arguments)))};
a.prototype.subscribe=function(a){return b.promisedRequest(this,"library_subscribe",[this.owner.uri].concat(SP.uris(arguments)))};a.prototype.unpublish=function(a){return b.promisedRequest(this,"library_unpublish",[this.owner.uri].concat(SP.uris(arguments)))};a.prototype.unstar=function(a){return b.promisedRequest(this,"library_unstar",[this.owner.uri].concat(SP.uris(arguments)))};a.prototype.unsubscribe=function(a){return b.promisedRequest(this,"library_unsubscribe",[this.owner.uri].concat(SP.uris(arguments)))};
a.forCurrentUser=function(){return a.forUser(b.session.user)};a.forUser=function(b){return a.fromURI(b.uri)};exports.Library=a});
