require(["$api/hermes","$api/models"],function(n,e){function j(a,b,d){d||(d=new e.Promise);g[a]?(g[a].values.push(b),g[a].promises.push(d)):g[a]={values:[b],promises:[d]};k||(SP.defer(null,q),k=!0);return d}function h(a,b,d,c,f){var e=n.Hermes.request(a,b,d?[p.type(d)]:[],c?[p.type(c)]:[]);return e.send.apply(e,SP.varargs(arguments,4))}function q(){k&&(k=!1);for(var a in g)r[a](g[a].values,g[a].promises).fail(g[a],function(a,d){for(var c=0,f=this.promises.length;c<f;c++)this.promises[c].setFail(d)});
g={}}function l(a){return m("artist",a)}function m(a,b){var a="spotify:"+a,d=b.indexOf(a);return 0<=d?b.substr(d+a.length+1):b}var i={NOT_SUBSCRIBED:0,SUBSCRIBED:1},p=n.Schema.fromURL("$api/proto/socialgraph.proto"),r={combinedSubscriptionCount:function(a,b){return h("GET","hm://socialgraph/subscriptions/combined/count","CountReply","StringListRequest",{args:a}).done(function(a){for(var a=a[0].counts,c=0,f=a.length;c<f;c++)b[c].setDone(a[c])})},isSubscribed:function(a,b){return h("GET","hm://socialgraph/subscriptions/artist/exists",
"StringListReply","StringListRequest",{args:a}).done(function(a){for(var a=a[0].reply,c=0,f=a.length;c<f;c++)b[c].setDone("True"==a[c])})},subscriberCount:function(a,b){return h("GET","hm://socialgraph/subscribers/artist/count","CountReply","StringListRequest",{args:a}).done(function(a){for(var a=a[0].counts,c=0,f=a.length;c<f;c++)b[c].setDone(a[c])})}},g={},k=!1;exports.Relationship=i;exports.artistSubscriptions=function(a){var b=new e.Promise,a=a?m("user",a):"";"@"==a&&(a="");h("GET","hm://socialgraph/subscriptions/artist/"+
a,"ArtistListReply","UserListRequest").done(function(a){for(var c=[],a=a[0].artists||[],f=0,g=a.length;f<g;f++)c.push(e.Artist.fromURI("spotify:artist:"+a[f].artistid));b.setDone(c)}).fail(function(a,c){b.setFail(c)});return b};exports.categorizeUsersAndArtists=function(a){for(var b=[],d=[],c={},f={},g={},h=0,k=a.length;h<k;h++){var i=a[h];0===i.indexOf("spotify:artist:")?b.push(i):(f[i]=!0,d.push(i))}b=e.Artist.fromURIs(b).map(function(a){return a.load("user")});a=e.Promise.join(b);a.each(function(a){a.user?
(f[a.user.uri]=!0,g[a.uri]=!0):c[a.uri]=!0});b=e.User.fromURIs(d).map(function(a){return a.load("artist")});d=e.Promise.join(b);d.each(function(a){a.artist&&(g[a.artist.uri]=!0)});var j=new e.Promise;e.Promise.join(a,d).always(function(){j.setDone({artistUris:Object.keys(c),userUris:Object.keys(f),mergedUris:Object.keys(g)})});return j};exports.changeRelation=function(a,b){if(0===a.length){var d=new e.Promise;d.setDone();return d}d=h(b===i.SUBSCRIBED?"POST":"DELETE","hm://socialgraph/subscriptions/artist",
"StringListReply","StringListRequest",{args:a.map(l)});d.done(this,function(){e.Artist._cache.update(a,{subscribed:b===i.SUBSCRIBED})});return d};exports.combinedSubscriptionCount=function(a){var a=m("user",a),b,d;"@"===a?d=e.session.user.load("username").done(function(a){b=a.username}).fail(function(a,b){d.setFail(b)}):(b=decodeURIComponent(a),d=new e.Promise,d.setDone());var c=new e.Promise;d.done(function(){j("combinedSubscriptionCount",b,c)});return c};exports.updateCache=function(a,b){e.Artist._cache.update(a,
{subscribed:b===i.SUBSCRIBED})};exports.isSubscribed=function(a){return j("isSubscribed",l(a))};exports.subscriberCount=function(a){return j("subscriberCount",l(a))}});
