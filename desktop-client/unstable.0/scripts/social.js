var sp=getSpotifyApi(),dom=sp.require("$util/dom"),events=sp.require("$util/events"),models=sp.require("$api/models"),react=sp.require("$util/react"),staticdata=sp.require("$unstable/staticdata"),storage=sp.require("$util/storage"),util=sp.require("$util/util"),RELATIONS_LOADED_EVENT="relationsLoaded",RELATIONS_CHANGED_EVENT="relationsChanged",RELATION_UPDATED_EVENT="relationUpdated",SUBSCRIPTION_ADDED_EVENT="subscribe",SUBSCRIPTION_REMOVED_EVENT="unsubscribe",DISMISS_EVENT="dismiss",RELATIONS_CACHE_KEY=
"socialRelationsCache",RELATIONS_CACHE_USERS_KEY="users",RELATIONS_CACHE_VERSION_KEY="__cacheVersion__";
sp.core.registerSchema([{name:"CountResponse",fields:[{id:1,type:"*int32",name:"counts"}]},{name:"UserListRequest",fields:[]},{name:"UserListResponse",fields:[{id:1,type:"int32",name:"matches"},{id:2,type:"*User",name:"users"}]},{name:"User",fields:[{id:1,type:"string",name:"username"},{id:2,type:"int32",name:"subscriber_count"},{id:3,type:"int32",name:"subscription_count"}]},{name:"FacebookMessagePost",fields:[{id:1,name:"fb_uid",type:"*string"},{id:2,name:"message",type:"string"},{id:3,name:"spotify_uri",
type:"*string"}]}]);exports.addEventListener=addEventListener;exports.decorate=decorate;exports.dismiss=dismiss;exports.getAllUsers=getAllUsers;exports.getAllFacebookUsers=getAllFacebookUsers;exports.getSubscriberCount=getSubscriberCount;exports.getSubscribers=getSubscribers;exports.getSubscribersIntersection=getSubscribersIntersection;exports.getSubscriptionCount=getSubscriptionCount;exports.getSubscriptions=getSubscriptions;exports.getSubscriptionsIntersection=getSubscriptionsIntersection;
exports.getUserBy=getUserBy;exports.getUserByFacebookUid=getUserByFacebookUid;exports.getUserByUri=getUserByUri;exports.getUserByUsername=getUserByUsername;exports.getUsernames=getUsernames;exports.isDismissed=isDismissed;exports.isSubscribed=isSubscribed;exports.sendFacebookMessage=sendFacebookMessage;exports.subscribe=subscribe;exports.unsubscribe=unsubscribe;exports.RELATIONS_LOADED_EVENT=RELATIONS_LOADED_EVENT;exports.RELATIONS_CHANGED_EVENT=RELATIONS_CHANGED_EVENT;
exports.RELATION_UPDATED_EVENT=RELATION_UPDATED_EVENT;exports.SUBSCRIPTION_ADDED_EVENT=SUBSCRIPTION_ADDED_EVENT;exports.SUBSCRIPTION_REMOVED_EVENT=SUBSCRIPTION_REMOVED_EVENT;exports.DISMISS_EVENT=DISMISS_EVENT;Object.defineProperty(exports,"loaded",{get:function(){return relations.loaded}});
var relations=sp.social.relations,loadEvent=react.fromDOMEvent(relations,"load"),reloadEvent=react.fromDOMEvent(relations,"reload"),changeEvent=react.fromDOMEvent(relations,"change"),relationsCache=loadCache(),target=new events.EventTarget;loadEvent.subscribe(function(){updateCache();(new dom.Event(RELATIONS_LOADED_EVENT,!0)).dispatch(target)});reloadEvent.subscribe(function(){updateCache()&&(new dom.Event(RELATIONS_CHANGED_EVENT,!0)).dispatch(target)});
changeEvent.subscribe(function(a){a.data.forEach(function(a){a.canonicalUsername!==sp.core.user.canonicalUsername&&updateCachedUser(a)});var b=document.createEvent("CustomEvent");b.initCustomEvent(RELATION_UPDATED_EVENT,!0,!1,a.data);target.dispatchEvent(b)});window.addEventListener("beforeunload",saveCache);var subscribeEvent,unsubscribeEvent,dismissEvent;
function addEventListener(a,b,c){try{switch(a){case RELATIONS_LOADED_EVENT:case RELATIONS_CHANGED_EVENT:case RELATION_UPDATED_EVENT:break;case SUBSCRIPTION_ADDED_EVENT:if(subscribeEvent)break;subscribeEvent=react.fromDOMEvent(sp.social,"socialSubscribe");subscribeEvent.subscribe(function(a){var b=document.createEvent("CustomEvent");b.initCustomEvent(SUBSCRIPTION_ADDED_EVENT,!0,!1,a.data);target.dispatchEvent(b)});break;case SUBSCRIPTION_REMOVED_EVENT:if(unsubscribeEvent)break;unsubscribeEvent=react.fromDOMEvent(sp.social,
"socialUnsubscribe");unsubscribeEvent.subscribe(function(a){var b=document.createEvent("CustomEvent");b.initCustomEvent(SUBSCRIPTION_REMOVED_EVENT,!0,!1,a.data);target.dispatchEvent(b)});break;case DISMISS_EVENT:if(dismissEvent)break;dismissEvent=react.fromDOMEvent(sp.social,"socialDismiss");dismissEvent.subscribe(function(a){var b=document.createEvent("CustomEvent");b.initCustomEvent(DISMISS_EVENT,!0,!1,a.data);target.dispatchEvent(b)});break;default:console.warn("Invalid event type: "+a);return}}catch(d){console.warn("Bridge "+
d);return}target.addEventListener(a,b,c)}var ConvertTo={SAME_AS_INPUT:0,ALWAYS_ARRAY:1,ALWAYS_ITEM:2},UserLike;
function convertToUsername(a,b){b==ConvertTo.ALWAYS_ARRAY&&(a instanceof Array||(a=[a]));if(a instanceof Array){if(b==ConvertTo.ALWAYS_ITEM)throw Error("Got an array but expected a single item");return a.map(function(a){return convertToUsername(a,ConvertTo.ALWAYS_ITEM)})}switch(a.constructor){case models.Link:if(a.type!=models.Link.TYPE.PROFILE)throw Error('Expected user Link, got "'+a+'"');return a.uri.split(":")[2];case models.User:return a.canonicalName;case String:return 0<=a.indexOf(":")?convertToUsername(new models.Link(a)):
a;default:throw Error("Cannot convert type "+(a.constructor.name||"<unknown>"));}}
function convertToUser(a,b){b==ConvertTo.ALWAYS_ARRAY&&(a instanceof Array||(a=[a]));if(a instanceof Array){if(b==ConvertTo.ALWAYS_ITEM)throw Error("Got an array but expected a single item");return a.map(function(a){return convertToUser(a,ConvertTo.ALWAYS_ITEM)})}switch(a.constructor){case models.Link:return models.User.fromURI(a);case models.User:return a;case String:return-1==a.indexOf(":")&&(a="spotify:user:"+a),models.User.fromURI(a);default:throw Error("Cannot convert type "+(a.constructor.name||
"<unknown>"));}}function decorate(a,b){var a=convertToUser(a,ConvertTo.ALWAYS_ARRAY),c=a.length;if(c)for(var d=c,f=0;f<c;f++){var e=a[f],g=staticdata.getInterestingPeople(e.canonicalName);g?(g.dismissed=isDismissed(e.canonicalName),g.subscribed=isSubscribed(e.canonicalName),e.update(g),e.loaded=!0,--d||b(a)):e.data.name&&e.data.picture?--d||b(a):sp.social.getUserByUsername(e.canonicalName,{onSuccess:function(b){return function(c){a[b].update(c)}}(f),onComplete:function(){--d||b(a)}})}else b(a)}
function dismiss(a,b,c){a=convertToUsername(a,ConvertTo.ALWAYS_ARRAY);sp.social.dismissUsers(a,{onSuccess:b||id,onFailure:c||id})}function subscribe(a,b,c){a=convertToUsername(a,ConvertTo.ALWAYS_ARRAY);sp.social.subscribeUsers(a,{onSuccess:b||id,onFailure:c||id})}function getSubscriberCount(a,b,c){a=convertToUsername(a,ConvertTo.ALWAYS_ARRAY);sp.social.getSubscriberCounts(a,{onSuccess:b,onFailure:c||id})}
function _decorateUserData(a,b){var c=a.map(function(a){return new models.User(a)});decorate(c,b)}function getSubscribers(a,b,c){a&&(a=convertToUsername(a,ConvertTo.ALWAYS_ITEM));sp.social.getSubscribers(a,{onSuccess:function(a){_decorateUserData(a,b)},onFailure:c||id})}
function getSubscribersIntersection(a,b,c,d){a=convertToUsername(a,ConvertTo.ALWAYS_ITEM);b=convertToUsername(b,ConvertTo.ALWAYS_ARRAY);getSubscribers(a,function(a){var d={};a.forEach(function(a){d[a.canonicalName]=!0});c(b.map(function(a){return!!d[a]}))},d||id)}function getSubscriptionCount(a,b,c){a=convertToUsername(a,ConvertTo.ALWAYS_ARRAY);sp.social.getSubscriptionCounts(a,{onSuccess:b,onFailure:c||id})}
function getSubscriptions(a,b,c){a&&(a=convertToUsername(a,ConvertTo.ALWAYS_ITEM));a==sp.core.canonicalUsername?_decorateUserData(sp.social.subscriptions,b):sp.social.getSubscriptions(a,{onSuccess:function(a){_decorateUserData(a,b)},onFailure:function(a){c&&c(a)}})}
function getSubscriptionsIntersection(a,b,c,d){a=convertToUsername(a,ConvertTo.ALWAYS_ITEM);b=convertToUsername(b,ConvertTo.ALWAYS_ARRAY);getSubscriptions(a,function(a){var d={};a.forEach(function(a){d[a.canonicalName]=!0});c(b.map(function(a){return!!d[a]}))},d||id)}var _dismissedCache=null,_subscribedCache=null;
function isDismissed(a){a=convertToUsername(a,ConvertTo.ALWAYS_ITEM);if(!_dismissedCache){var b=sp.social.dismissals;if(!b)return null;_dismissedCache={};b.forEach(function(a){_dismissedCache[a.canonicalUsername]=!0});addEventListener(DISMISS_EVENT,function(a){a.detail.forEach(function(a){_dismissedCache[a]=!0})})}return!!_dismissedCache[a]}
function isSubscribed(a){a=convertToUsername(a,ConvertTo.ALWAYS_ITEM);if(!_subscribedCache){var b=sp.social.subscriptions;if(!b)return null;_subscribedCache={};b.forEach(function(a){_subscribedCache[a.canonicalUsername]=!0});addEventListener(SUBSCRIPTION_ADDED_EVENT,function(a){a.detail.forEach(function(a){_subscribedCache[a]=!0})});addEventListener(SUBSCRIPTION_REMOVED_EVENT,function(a){a.detail.forEach(function(a){delete _subscribedCache[a]})})}return!!_subscribedCache[a]}
function unsubscribe(a,b,c){a=convertToUsername(a,ConvertTo.ALWAYS_ARRAY);sp.social.unsubscribeUsers(a,{onSuccess:b||id,onFailure:c||id})}function updateCache(){var a=relationsCache;relationsCache=getUserMap();saveCache();return!compareCaches(a,relationsCache)}function saveCache(){var a={};a[RELATIONS_CACHE_VERSION_KEY]=2;a[RELATIONS_CACHE_USERS_KEY]=relationsCache;storage.set(RELATIONS_CACHE_KEY,a)}
function loadCache(){var a=storage.get(RELATIONS_CACHE_KEY);return!a||!(RELATIONS_CACHE_VERSION_KEY in a)||2>a[RELATIONS_CACHE_VERSION_KEY]||!a[RELATIONS_CACHE_USERS_KEY]?getUserMap():a[RELATIONS_CACHE_USERS_KEY]}function getUserMap(){for(var a={},b=0,c=relations.length;b<c;++b){var d=relations.getUserInfo(b);a[d.uri]=d}return a}function getAllUsers(){var a=partial(getValue,relationsCache);return map(a,Object.keys(relationsCache))}
function getAllFacebookUsers(){return map(getUserByFacebookUid,relations.allFacebookUsers())}function getUserBy(a){a=filter(a,getAllUsers());return 0===a.length?null:a[0]}function getUserByUsername(a){var b=partial(getKey,"canonicalUsername");return getUserBy(partial(comparing,b,a))}function getUserByFacebookUid(a){var b=partial(getKey,"facebookUid");return getUserBy(partial(comparing,b,a))}function getUserByUri(a){var b=partial(getKey,"uri");return getUserBy(partial(comparing,b,a))}
function getUsernames(){var a=[],b,c;for(c in relationsCache)b=relationsCache[c].canonicalUsername,b.length&&0!==b.indexOf("spotify:user:facebook:")&&a.push(b);return a}function updateCachedUser(a){var b=relationsCache[a.uri];if("none"===a.relationType)if(b)delete relationsCache[a.uri];else return!1;return!b||!compareUsers(a,b)?(relationsCache[a.uri]=a,saveCache(),!0):!1}function compareUsers(a,b){for(var c in a)if(getValue(a,c)!==getValue(b,c))return!1;return!0}
function compareCaches(a,b){if(Object.keys(a).length!==Object.keys(b).length)return!1;for(var c in a)if(!b[c])return!1;return!0}
function sendFacebookMessage(a,b,c,d,f,e){if(!a||!a.length)throw Error("At least one Facebook UID must be provided.");if(!c||!c.length)throw Error("At least one Spotify URL must be provided.");a instanceof Array||(a=[a]);c instanceof Array||(c=[c]);sp.core.getHermes("POST","hm://social/post_to_facebook",[["FacebookMessagePost",{fb_uid:a,message:b||"",spotify_uri:c}]],{onSuccess:d||id,onFailure:f||id,onComplete:e||id})}function comparing(a,b,c){return eq(b,a(c))}function getKey(a,b){return b[a]}
function getValue(a,b){return a[b]};
